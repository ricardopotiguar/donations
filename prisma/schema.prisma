// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  email       String  @unique
  name        String
  age         Int
  type        String
  userNeeds   UserNeeds[]  // Relacionamento com UserNeeds
  donations   Donation[]   // Relacionamento com Donation (doações feitas pelo usuário)
  createdAt   DateTime     @default(now()) // Data de criação da doação
  updatedAt   DateTime
  phone       String
  password    String
}

model UserNeeds {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  quantity    Int
  userId      Int     // ID do usuário que possui a necessidade
  user        User    @relation(fields: [userId], references: [id]) // Chave estrangeira para User
  state       String
  donations   Donation[]   // Relacionamento com Donation (doações recebidas)
  createdAt   DateTime     @default(now()) // Data de criação da doação
  updatedAt   DateTime

  @@index([userId]) // Índice no campo userId para melhorar o desempenho
}

model Donation {
  id          Int          @id @default(autoincrement())
  donorId     Int          // ID do usuário que fez a doação
  donor       User         @relation(fields: [donorId], references: [id]) // Relacionamento com User (doador)
  userNeedsId Int          // ID da necessidade associada à doação
  userNeeds   UserNeeds    @relation(fields: [userNeedsId], references: [id]) // Relacionamento com UserNeeds
  createdAt   DateTime     @default(now()) // Data de criação da doação
  quantity    Int
  updatedAt   DateTime
  state       String

  @@index([donorId])       // Índice para melhorar consultas por doador
  @@index([userNeedsId])   // Índice para melhorar consultas por UserNeeds
}


